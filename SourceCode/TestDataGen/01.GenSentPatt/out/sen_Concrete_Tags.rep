
@ N2 <TagString>
@ N3
@ N4 = (  NT4  )  `  `
@ N5 = (  NT5  )  ` negation `
@ N6 = (  NT6  )  ` \n  \' `
@ N7 = (  NT7  )  ` < ( ) N7 > `
@ N8 = (  NT8  )  ` \< `
@ N9 = (  NT9  )  ` \> `
@ N10 = (  NT10  )  ` \\` `
@ N11 = (  NT11  )  ` \\\\ `
@ N12 = (  NT12  ) <LAYOUT> `  `
@ N13 = (  & NT13  )  `  `
@ N14 = (  start [ NT14 ]  )  `  `
@ N15 = (  NT15 a   )  `  `
@ N16 = (  [  ] a   )  `  `
@ N17 = (  \"  \" a   )  `  `
@ N18 = (  \'  \' a   )  `  `
@ N19 = (  ! [  ]  )  `  `
@ N20 = (  [  ] - [  ]  )  `  `
@ N21 = (  [  ] && [  ]  )  `  `
@ N22 = (  [  ] || [  ]  )  `  `
@ N23 = (  ( [  ] )  )  `  `
@ N24 = (  \" \\ " \"  )  `  `
@ N25 = (  \" negation \"  )  `  `
@ N26 = (  \" \n  \' \"  )  `  `
@ N27 = (  NT27 +  )  `  `
@ N28 = (  NT28 *  )  `  `
@ N29 = (  { NT29 NT29 } +  )  `  `
@ N30 = (  { NT30 NT30 } *  )  `  `
@ N31 = (  NT31 ?  )  `  `
@ N32 = (  ( NT32 | NT32  )  )  `  `
@ N33 = (  ( NT33 NT33 )  )  `  `
@ N34 = (  NT34 @ 0  )  `  `
@ N35 = (  NT35 @ 1   )  `  `
@ N36 = (  NT36 @ 0 X 0  )  `  `
@ N37 = (  NT37 @ 0 0  )  `  `
@ N38 = (  NT38 $  )  `  `
@ N39 = (  ^ NT39  )  `  `
@ N40 = (  NT40 ! a   )  `  `
@ N41 = (  NT41 >> NT41  )  `  `
@ N42 = (  NT42 !>> NT42  )  `  `
@ N43 = (  NT43 << NT43  )  `  `
@ N44 = (  NT44 !<< NT44  )  `  `
@ N45 = (  NT45 \\ NT45  )  `  `
@ N46 = { assert (  ( )  )  `  ` ; }
@ N47 = { assert { filter ; } ; }
@ N48 = { assert { ; } ; }
@ N49 = { assert value (   ) { filter ; } ; }
@ N50 = { assert value (  ...  ) { filter ; } ; }
@ N51 = { assert loc (   ) { filter ; } ; }
@ N52 = { assert node (   ) { filter ; } ; }
@ N53 = { assert num (   ) { filter ; } ; }
@ N54 = { assert type (   ) { filter ; } ; }
@ N55 = { assert bag (   ) { filter ; } ; }
@ N56 = { assert int (   ) { filter ; } ; }
@ N57 = { assert rat (   ) { filter ; } ; }
@ N58 = { assert rel (   ) { filter ; } ; }
@ N59 = { assert lrel (   ) { filter ; } ; }
@ N60 = { assert real (   ) { filter ; } ; }
@ N61 = { assert tuple (   ) { filter ; } ; }
@ N62 = { assert str (   ) { filter ; } ; }
@ N63 = { assert bool (   ) { filter ; } ; }
@ N64 = { assert void (   ) { filter ; } ; }
@ N65 = { assert datetime (   ) { filter ; } ; }
@ N66 = { assert set (   ) { filter ; } ; }
@ N67 = { assert map (   ) { filter ; } ; }
@ N68 = { assert list (   ) { filter ; } ; }
@ N69 = { assert ( ) (   ) { filter ; } ; }
@ N70 = { assert (   ) {  } ; }
